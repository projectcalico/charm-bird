#!/usr/bin/env python3

import amulet
import unittest


class TestDeployment(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.deployment = amulet.Deployment(series='trusty')

        cls.deployment.add('bird')
        cls.deployment.add('nova-compute')
        cls.deployment.add('neutron-calico', charm='cs:~project-calico/trusty/neutron-calico')
        cls.deployment.relate('nova-compute:neutron-plugin', 'neutron-calico:neutron-plugin')
        cls.deployment.relate('bird:bgp-route-reflector', 'neutron-calico:bgp-route-reflector')

        cls.deployment.setup(timeout=900)
        cls.deployment.sentry.wait()

    def test_bird_status(self):
        """
        Validate that the Bird service is running
        """
        o, c = self.deployment.sentry['bird'][0].run("service bird status | grep -q running")
        assert c == 0, "Bird service is not running"


if __name__ == '__main__':
    unittest.main()
